name: deploy

on:
  push:
    branches: ["master"]

permissions:
  contents: read
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ["3.4"]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-region: ap-northeast-1
          role-to-assume: arn:aws:iam::282782318939:role/ActionsAsonasPortfolio
          role-session-name: GitHubActions-${{ github.run_id }}
      - name: test
        run: aws sts get-caller-identity

      - name: Detect package manager
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/pnpm-lock.yaml" ]; then
            echo "::set-output name=manager::pnpm"
            echo "::set-output name=command::install"
            exit 0
          elif [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::install"
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::ci"
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
        if: steps.detect-package-manager.outputs.manager == 'pnpm'

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: ${{ steps.detect-package-manager.outputs.manager }}
      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler: "2.4.22" # Ruby 3.0と互換性のあるバージョン
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically

      - name: build
        run: BUCKET_NAME=${{ secrets.BUCKET_NAME }} bundle exec middleman build --verbose

      - name: deploy
        run: AWS_DISTRIBUTION_ID=${{ secrets.AWS_DISTRIBUTION_ID }} bundle ex ruby deploy.rb

      - name: update revision
        run: AWS_DISTRIBUTION_ID=${{ secrets.AWS_DISTRIBUTION_ID }} bundle ex ruby update_revision.rb
